//min swap required Given an array of integers A and an integer B, find and return the minimum number of swaps required to bring all the numbers
//less than or equal to B together.
//count the total number of the element whihc are good and it will become the window because we need to put them together and we will  create first
//window for counting bad element and after first window will start adding it and remove it from back with i-bad

Note: It is possible to swap any two elements, not necessarily consecutive.
public class Solution {
    public int solve(int[] A, int B) {
        int count=0;
        int bad=0;
        for(int i=0;i<A.length;i++)
        {
            if(A[i]<=B)
            count+=1;
        }
        for(int i=0;i<count;i++)
        {
            if(A[i]>B)
            bad+=1;
        }
        int minSwaps = Integer.MAX_VALUE;
        for(int i=count;i<A.length;i++)
        {
            if(A[i-count]>B)
            {
                bad-=1;
            }
            if(A[i]>B)
            {
                bad+=1;
            }
            minSwaps=Math.min(minSwaps,bad);
        }
        if(minSwaps==Integer.MAX_VALUE)
        return 0;
        else
        return minSwaps;
    }
}
